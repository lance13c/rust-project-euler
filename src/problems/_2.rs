
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.



pub fn solve() -> u32 {
  //print!("{}\n", test() );

  return fib_even(4000000);
}

fn fib_even(max_val: u32) -> u32 {
  
  let mut sum = 0;
  let mut i = 1;
  let mut j = 2;
  let mut temp;

  // Adds starting even value 2
  //sum += i;

  while j <= max_val {
    temp = j;
    if j % 2 == 0 { sum += j; }
    //print!("{}, {}\n", j, sum );
    j = i + j;
    i = temp;
  }

  return sum;
}

fn test() -> bool {
  return fib_even(50) == 44;
}